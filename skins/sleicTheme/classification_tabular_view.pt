<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
		  lang="en"
		  metal:use-macro="here/main_template/macros/master"
		  i18n:domain="FacultyStaffDirectory">


<tal:comment tal:replace="nothing">
  Created by: Paul Rentschler
  Description: used to display people in a certain classification
                in a tabular layout.
  Based on: classification_tabular_view.pt (from FSD 2.1.3)
  Changes:
  	- remove the classification headings when displaying a facility (inTechFacPeople)
  	  - inTechFacPeople is defined in specialty_view
  	- added job title(s) and research area(s) columns with corresponding headers
</tal:comment>


	<body>
		<metal:block fill-slot="main">
		
	    <div class="facultyStaffDirectory classification">
        <div metal:use-macro="here/document_actions/macros/document_actions">
         Document actions (print, sendto etc)
        </div>
                
        <h1 tal:content="object_title" class="documentFirstHeading">
          Title or id
        </h1>
                
        <a href=""
           class="link-parent"
           tal:define="parent_url python:here.navigationParent(here, template_id)"
           tal:condition="parent_url"
           tal:attributes="href parent_url"
           i18n:translate="go_to_parent_url">
          Up one level
        </a>
        
        <p class="documentDescription"
           tal:content="here/Description"
           tal:condition="here/Description">
          Description
        </p>
		
        <div class="tabularView">
          <table class="listing" id="sortable">
            <tbody>

              <metal:block define-macro="list_people">

                <tal:block tal:define="classificationExists nocall:classification | nothing;
                                       classificationContext python:classificationExists and context.contextualClassification(classification) or context;
                                       classificationName classificationContext/Title;
                                       people classificationContext/getSortedPeople;"
                           tal:condition="people">

                  <metal:block define-slot="classification_header" tal:condition="nocall:classificationExists">
                    <tr tal:condition="not:inTechFacPeople">
	                    <th colspan="3" class="classification">

	                      <metal:block define-macro="classification_header_link">
	                        <a tal:attributes="name python:normalizeString(classificationContext.Title()); href python:'%s?classification=%s' % (here.absolute_url(), classification.id)" tal:content="classificationContext/Title">[classification]</a>
	                      </metal:block>  

	                    </th>
                    </tr>
                  </metal:block>

                  <metal:block define-slot="table_headings">
                    <tr>
                      <th class="column" i18n:translate="FacultyStaffDirectory_name">
                        Name
                      </th>
                      <th class="column">
                        Job title(s)
                      </th>
                      <th class="column" i18n:translate="FacultyStaffDirectory_phone">
                        Phone
                      </th>
                      <th class="column" i18n:translate="FacultyStaffDirectory_email">
                        Email
                      </th>
                      <th class="column">
                        Research area(s)
                      </th>
                    </tr>
                  </metal:block>

                  <tal:block tal:repeat="person people">
                    <tr tal:define="oddrow repeat/person/odd" tal:attributes="class python:test(oddrow, 'even', 'odd')">

                      <metal:block define-slot="table_cells">
                        <td class="personName">
                          <a href="" 
                          	 tal:attributes="href person/absolute_url"
                          	 tal:content="string:${person/getLastName}, ${person/getFirstName}" />
                        </td>
												<td>
													<ul tal:condition="person/getJobTitles" class="jobTitle">
														<li tal:repeat="jobTitle person/getJobTitles" 
																tal:content="jobTitle">[job title]
														</li>
													</ul>                
													<span tal:condition="not: person/getJobTitles">&nbsp;</span>
												</td>
                        <td class="officePhone">
													<span tal:condition="person/getOfficePhone"
																tal:content="person/getOfficePhone">[phone number]</span>
													<span tal:condition="not: person/getOfficePhone">&nbsp;</span>
												</td>
                        <td>
                        	<span class="emailAddress"
                        				tal:condition="person/getEmail" 
                        				tal:replace="structure python:person.spamProtectFSD(person.getEmail())" />
                       	</td>
                        <td>
                          <ul tal:condition="person/getSpecialties" class="specialties">
                            <tal:block tal:repeat="specialtyTuple person/getSpecialties">
                              <li tal:define="specialty python:specialtyTuple[0];
																							personSpecialtyData python:specialtyTuple[1];
																							specialtyURL python:specialty.getObject().absolute_url();"
																  tal:condition="python: 'dministration' not in specialty.Title">
																<a tal:attributes="href specialtyURL">
																	<span tal:content="specialty/Title">[name of specialty]</span></a>
															</li>
														</tal:block>
													</ul>
												</td>
                      </metal:block>

                    </tr>
                  </tal:block>

                </tal:block>
                
              </metal:block>

            </tbody>
          </table>
        </div>
      </div>
      
		</metal:block>
		
	</body>
</html>
